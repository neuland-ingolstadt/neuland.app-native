name: Release

on:
  push:
    tags:
      - "*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/webapp

jobs:
  changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine if prerelease
        id: prerelease_check
        run: |
          if [[ "${{ github.ref }}" =~ - ]]; then
            echo "PRERELEASE=true" >> $GITHUB_ENV
          else
            echo "PRERELEASE=false" >> $GITHUB_ENV
          fi

      - name: Find latest stable tag
        id: latest_stable_tag
        run: |
          LATEST_TAG=$(git tag --sort=-creatordate | grep -v "-" | head -n1)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Generate changelog
        id: git-cliff
        uses: orhun/git-cliff-action@v4
        with:
          config: cliff.toml
          args: ${{ env.PRERELEASE == 'true' && '--latest --strip all' || format('{0}..HEAD --strip all', env.LATEST_TAG) }}
        env:
          OUTPUT: CHANGES.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Upload the binary releases
        uses: svenstaro/upload-release-action@v2
        with:
          file: /
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          body: ${{ steps.git-cliff.outputs.content }}
          prerelease: ${{ env.PRERELEASE }}

  github-releases-to-discord:
    name: Notify Discord
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Discord Hook Action
        uses: Poss111/discord-hook-action@v1.6.13
        with:
          discord-hook-url: ${{ secrets.WEBHOOK_URL }}
          title: "Neuland Next Release: ${{ github.ref_name }}"
          message: |
            A new version of Neuland Next has been published! ✨
            Check out the latest updates and improvements! 🎉

            📝 Release Notes:
            https://github.com/neuland-ingolstadt/neuland.app-native/releases/tag/${{github.ref_name}}

            📱 Download the app:
            http://next.neuland.app/get

            🧪 Beta Version:
            https://next.neuland.app/app/beta
          message-color: "48120"
          branch: ${{ github.ref_name }}
          sha: ${{ github.sha }}
          actionUrl: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          triggeredBy: ${{ github.actor }}

  build-docker-image:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      attestations: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine if prerelease
        run: |
          if [[ "${{ github.ref }}" =~ - ]]; then
              echo "PRERELEASE=true" >> $GITHUB_ENV
              echo "TAG_TYPE=beta" >> $GITHUB_ENV
              echo "ENDPOINT=DEV" >> $GITHUB_ENV
          else
              echo "PRERELEASE=false" >> $GITHUB_ENV
              echo "TAG_TYPE=release" >> $GITHUB_ENV
              echo "ENDPOINT=PROD" >> $GITHUB_ENV
          fi

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag name
        id: tag_name
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.tag_name.outputs.TAG }}
            type=raw,value=${{ env.TAG_TYPE }}-latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            type=${{ env.TAG_TYPE }}
          build-args: |
            EXPO_PUBLIC_THI_API_KEY=${{ secrets.EXPO_PUBLIC_THI_API_KEY }}
            EXPO_PUBLIC_NEULAND_GRAPHQL_ENDPOINT=${{ vars.GRAPHQL_ENDPOINT_PROD }}
            EXPO_PUBLIC_APTABASE_KEY=${{ secrets.EXPO_PUBLIC_APTABASE_KEY }}
            EXPO_PUBLIC_GIT_COMMIT_HASH=${{ github.sha }}

  build-android:
    name: Build Android app
    runs-on: ubuntu-latest
    needs: changelog
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node JS environment
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install project dependencies
        run: bun install --frozen-lockfile --ignore-scripts -p

      - name: Update license list
        run: |
          bun i npm-license-crawler -g
          bun run licences

      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.2
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Build with EAS
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          EXPO_PUBLIC_GIT_COMMIT_HASH: ${{ github.sha }}
        run: eas build --platform android --profile production --non-interactive --local --output neuland-next.aab

      - name: Upload AAB artifact for next job
        uses: actions/upload-artifact@v4
        with:
          name: android-build-artifacts
          path: |
            neuland-next.aab
          retention-days: 1

  publish-android:
    name: Submit and Publish
    runs-on: ubuntu-latest
    needs: build-android
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Setup Node JS environment
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install project dependencies
        run: bun install

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Download AAB from previous job
        uses: actions/download-artifact@v4
        with:
          name: android-build-artifacts

      - name: Submit beta to Google Play Store
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: eas submit --platform android --profile preview --non-interactive --path neuland-next.aab

      - name: Upload artifacts to Github
        uses: actions/upload-artifact@v4
        with:
          name: neuland-next-android
          path: neuland-next.aab
